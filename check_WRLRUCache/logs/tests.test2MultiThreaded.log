test2MultiThreaded (__main__.WeakrefLRUCacheTest.test2MultiThreaded) ... ==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b2800000058 by thread T3 (mutexes: write M101149):
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a96d)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26fa8)
    #2 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(std::integral_constant<bool, true>, jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26aad)
    #3 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2335e)
    #4 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f975)
    #5 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d38b)
    #6 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1debd)
    #7 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #8 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #9 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #10 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #11 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #12 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #13 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #14 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #16 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #17 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #18 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #19 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #20 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #21 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #22 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #23 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #24 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #25 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #26 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #27 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #28 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b2800000058 by thread T1:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ad70)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #3 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #4 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #5 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #7 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #9 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #10 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #11 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #12 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #13 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #14 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #15 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #16 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #17 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #19 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #20 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 152 at 0x7b2800000000 allocated by main thread:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #20 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #25 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #26 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #27 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #28 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #29 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #30 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #31 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #32 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #33 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #34 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #35 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #36 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #37 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #38 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #39 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #40 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #41 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #42 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #43 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #44 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #45 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #46 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #47 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #48 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #49 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #50 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #51 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #52 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #53 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #54 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #55 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #56 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #57 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #58 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #59 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #60 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #61 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #62 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #63 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #64 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #65 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #66 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #67 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #68 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #69 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #70 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #71 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #72 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #73 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #74 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #75 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #76 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #77 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #78 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #79 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #80 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #81 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #82 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #83 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #84 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #85 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #86 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #87 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #88 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #89 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #90 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #91 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #92 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #93 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #94 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #95 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #96 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #97 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #98 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #99 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #100 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #101 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #102 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #103 main Programs/python.c:15 (python3.13t+0x82ba5)

  Mutex M101149 (0x7b2800000090) created at:
    #0 __tsan_mutex_create ../../../../src/libsanitizer/tsan/tsan_interface_ann.cpp:466 (libtsan.so.0+0x7e696)
    #1 absl::Mutex::Mutex() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1b7f8)
    #2 jax::WeakrefLRUCache::WeakrefLRUCache(nanobind::callable, nanobind::callable, long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1c9c0)
    #3 void __gnu_cxx::new_allocator<jax::WeakrefLRUCache>::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33c38)
    #4 void std::allocator_traits<std::allocator<jax::WeakrefLRUCache> >::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>&, jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32d66)
    #5 std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31aa9)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fcc5)
    #7 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #8 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #9 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #10 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #11 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #12 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #13 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #14 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #16 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #17 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #18 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #19 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #20 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #21 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #22 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #23 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #24 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #25 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #26 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #27 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #28 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #29 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #30 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #31 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #32 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #33 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #34 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #36 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #37 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #38 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #39 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #40 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #41 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #42 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #43 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #44 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #45 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #46 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #47 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #48 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #49 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #50 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #51 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #52 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #53 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #54 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #56 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #57 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #58 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #59 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #60 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #61 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #62 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #63 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #64 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #65 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #66 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #67 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #68 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #69 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #70 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #71 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #72 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #73 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #74 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #75 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #76 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #77 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #78 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #79 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #80 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #81 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #82 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #83 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #84 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #85 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #86 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #87 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #88 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #89 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #90 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #91 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #92 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #93 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #94 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #95 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #96 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #97 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #98 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #99 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #100 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #101 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #102 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #103 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #104 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #105 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T3 (tid=15599, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T1 (tid=15597, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a96d) in std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 4 at 0x7b2800000034 by thread T2 (mutexes: write M101149):
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x208e5)
    #1 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #2 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #3 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #4 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #5 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #6 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #7 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #8 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #9 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #11 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #12 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #13 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #14 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #15 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #16 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #18 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #19 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #20 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #21 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #22 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #23 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 4 at 0x7b2800000034 by thread T3:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x357a0)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 152 at 0x7b2800000000 allocated by main thread:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #20 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #25 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #26 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #27 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #28 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #29 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #30 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #31 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #32 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #33 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #34 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #35 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #36 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #37 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #38 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #39 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #40 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #41 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #42 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #43 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #44 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #45 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #46 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #47 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #48 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #49 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #50 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #51 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #52 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #53 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #54 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #55 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #56 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #57 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #58 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #59 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #60 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #61 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #62 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #63 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #64 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #65 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #66 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #67 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #68 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #69 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #70 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #71 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #72 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #73 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #74 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #75 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #76 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #77 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #78 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #79 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #80 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #81 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #82 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #83 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #84 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #85 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #86 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #87 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #88 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #89 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #90 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #91 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #92 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #93 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #94 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #95 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #96 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #97 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #98 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #99 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #100 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #101 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #102 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #103 main Programs/python.c:15 (python3.13t+0x82ba5)

  Mutex M101149 (0x7b2800000090) created at:
    #0 __tsan_mutex_create ../../../../src/libsanitizer/tsan/tsan_interface_ann.cpp:466 (libtsan.so.0+0x7e696)
    #1 absl::Mutex::Mutex() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1b7f8)
    #2 jax::WeakrefLRUCache::WeakrefLRUCache(nanobind::callable, nanobind::callable, long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1c9c0)
    #3 void __gnu_cxx::new_allocator<jax::WeakrefLRUCache>::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33c38)
    #4 void std::allocator_traits<std::allocator<jax::WeakrefLRUCache> >::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>&, jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32d66)
    #5 std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31aa9)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fcc5)
    #7 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #8 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #9 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #10 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #11 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #12 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #13 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #14 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #16 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #17 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #18 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #19 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #20 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #21 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #22 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #23 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #24 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #25 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #26 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #27 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #28 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #29 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #30 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #31 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #32 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #33 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #34 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #36 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #37 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #38 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #39 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #40 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #41 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #42 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #43 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #44 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #45 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #46 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #47 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #48 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #49 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #50 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #51 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #52 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #53 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #54 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #56 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #57 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #58 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #59 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #60 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #61 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #62 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #63 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #64 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #65 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #66 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #67 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #68 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #69 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #70 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #71 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #72 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #73 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #74 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #75 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #76 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #77 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #78 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #79 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #80 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #81 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #82 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #83 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #84 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #85 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #86 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #87 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #88 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #89 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #90 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #91 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #92 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #93 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #94 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #95 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #96 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #97 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #98 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #99 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #100 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #101 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #102 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #103 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #104 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #105 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T2 (tid=15598, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T3 (tid=15599, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x208e5) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b2800000040 by thread T2 (mutexes: write M101149):
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x209c2)
    #1 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #2 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #3 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #4 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #5 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #6 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #7 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #8 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #9 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #11 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #12 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #13 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #14 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #15 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #16 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #18 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #19 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #20 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #21 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #22 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #23 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b2800000040 by thread T3:
    [failed to restore the stack]

  Location is heap block of size 152 at 0x7b2800000000 allocated by main thread:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #20 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #25 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #26 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #27 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #28 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #29 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #30 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #31 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #32 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #33 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #34 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #35 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #36 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #37 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #38 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #39 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #40 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #41 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #42 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #43 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #44 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #45 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #46 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #47 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #48 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #49 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #50 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #51 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #52 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #53 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #54 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #55 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #56 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #57 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #58 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #59 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #60 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #61 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #62 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #63 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #64 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #65 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #66 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #67 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #68 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #69 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #70 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #71 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #72 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #73 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #74 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #75 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #76 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #77 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #78 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #79 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #80 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #81 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #82 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #83 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #84 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #85 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #86 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #87 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #88 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #89 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #90 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #91 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #92 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #93 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #94 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #95 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #96 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #97 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #98 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #99 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #100 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #101 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #102 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #103 main Programs/python.c:15 (python3.13t+0x82ba5)

  Mutex M101149 (0x7b2800000090) created at:
    #0 __tsan_mutex_create ../../../../src/libsanitizer/tsan/tsan_interface_ann.cpp:466 (libtsan.so.0+0x7e696)
    #1 absl::Mutex::Mutex() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1b7f8)
    #2 jax::WeakrefLRUCache::WeakrefLRUCache(nanobind::callable, nanobind::callable, long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1c9c0)
    #3 void __gnu_cxx::new_allocator<jax::WeakrefLRUCache>::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33c38)
    #4 void std::allocator_traits<std::allocator<jax::WeakrefLRUCache> >::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>&, jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32d66)
    #5 std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31aa9)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fcc5)
    #7 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #8 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #9 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #10 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #11 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #12 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #13 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #14 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #16 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #17 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #18 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #19 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #20 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #21 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #22 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #23 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #24 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #25 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #26 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #27 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #28 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #29 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #30 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #31 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #32 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #33 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #34 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #36 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #37 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #38 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #39 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #40 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #41 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #42 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #43 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #44 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #45 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #46 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #47 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #48 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #49 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #50 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #51 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #52 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #53 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #54 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #56 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #57 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #58 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #59 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #60 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #61 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #62 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #63 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #64 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #65 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #66 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #67 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #68 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #69 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #70 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #71 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #72 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #73 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #74 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #75 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #76 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #77 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #78 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #79 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #80 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #81 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #82 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #83 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #84 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #85 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #86 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #87 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #88 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #89 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #90 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #91 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #92 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #93 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #94 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #95 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #96 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #97 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #98 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #99 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #100 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #101 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #102 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #103 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #104 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #105 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T2 (tid=15598, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T3 (tid=15599, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x209c2) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b1800006260 by thread T2 (mutexes: write M101149):
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20a20)
    #1 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #2 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #3 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #4 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #5 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #6 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #7 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #8 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #9 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #11 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #12 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #13 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #14 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #15 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #16 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #18 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #19 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #20 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #21 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #22 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #23 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b1800006260 by thread T3:
    [failed to restore the stack]

  Location is heap block of size 96 at 0x7b1800006240 allocated by thread T2:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M101149 (0x7b2800000090) created at:
    #0 __tsan_mutex_create ../../../../src/libsanitizer/tsan/tsan_interface_ann.cpp:466 (libtsan.so.0+0x7e696)
    #1 absl::Mutex::Mutex() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1b7f8)
    #2 jax::WeakrefLRUCache::WeakrefLRUCache(nanobind::callable, nanobind::callable, long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1c9c0)
    #3 void __gnu_cxx::new_allocator<jax::WeakrefLRUCache>::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33c38)
    #4 void std::allocator_traits<std::allocator<jax::WeakrefLRUCache> >::construct<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>&, jax::WeakrefLRUCache*, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32d66)
    #5 std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31aa9)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fcc5)
    #7 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #8 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #9 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #10 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #11 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #12 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #13 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #14 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #16 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #17 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #18 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #19 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #20 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #21 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #22 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #23 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #24 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #25 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #26 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #27 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #28 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #29 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #30 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #31 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #32 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #33 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #34 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #36 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #37 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #38 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #39 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #40 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #41 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #42 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #43 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #44 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #45 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #46 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #47 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #48 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #49 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #50 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #51 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #52 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #53 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #54 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #56 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #57 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #58 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #59 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #60 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #61 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #62 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #63 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #64 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #65 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #66 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #67 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #68 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #69 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #70 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #71 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #72 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #73 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #74 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #75 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #76 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #77 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #78 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #79 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #80 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #81 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #82 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #83 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #84 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #85 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #86 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #87 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #88 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #89 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #90 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #91 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #92 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #93 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #94 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #95 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #96 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #97 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #98 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #99 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #100 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #101 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #102 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #103 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #104 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #105 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T2 (tid=15598, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

  Thread T3 (tid=15599, finished) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20a20) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&)
==================
ok
test2MultiThreaded_multi_threaded (__main__.WeakrefLRUCacheTest.test2MultiThreaded_multi_threaded) ... ==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b2800005040 by thread T18 (mutexes: write M141154375060967568):
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x209c2)
    #1 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #2 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #3 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #4 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #5 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #6 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #7 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #8 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #9 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #11 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #12 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #13 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #14 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #15 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #16 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #18 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #19 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #20 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #21 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #22 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #23 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b2800005040 by thread T9:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 152 at 0x7b2800005000 allocated by thread T6:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #20 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #25 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M141154375060967568 is already destroyed.

  Thread T18 (tid=15614, running) created by thread T6 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T9 (tid=15605, running) created by thread T6 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T6 (tid=15602, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x209c2) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b18000232a0 by thread T10 (mutexes: write M166487122964992048):
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20a20)
    #1 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #2 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #3 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #4 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #5 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #6 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #7 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #8 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #9 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #11 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #12 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #13 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #14 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #15 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #16 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #18 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #19 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #20 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #21 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #22 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #23 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b18000232a0 by thread T19:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3576b)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 96 at 0x7b1800023280 allocated by thread T14:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M166487122964992048 is already destroyed.

  Thread T10 (tid=15606, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T19 (tid=15615, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T14 (tid=15610, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20a20) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b1c0001e028 by thread T22 (mutexes: write M126799151248810032):
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a949)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26fa8)
    #2 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(std::integral_constant<bool, true>, jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26aad)
    #3 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2335e)
    #4 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f975)
    #5 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d38b)
    #6 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1debd)
    #7 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #8 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #9 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #10 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #11 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #12 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #13 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #14 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #16 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #17 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #18 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #19 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #20 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #21 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #22 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #23 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #24 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #25 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #26 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #27 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #28 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b1c0001e028 by thread T11:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e4c4)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2acdc)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #3 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #4 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #5 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #7 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #8 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #10 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #11 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #12 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #13 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #14 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #15 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #16 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #17 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #19 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #20 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #21 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #22 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #23 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #24 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #25 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #26 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #27 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #28 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #29 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #30 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #31 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #32 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 104 at 0x7b1c0001dff0 allocated by thread T22:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3476c)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33ed1)
    #3 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_allocate_buckets(unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3306e)
    #4 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_allocate_buckets(unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31f53)
    #5 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x301fd)
    #6 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2de75)
    #7 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a41c)
    #8 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(std::integral_constant<bool, true>, jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26b2a)
    #9 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2335e)
    #10 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f975)
    #11 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d38b)
    #12 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1debd)
    #13 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #14 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #15 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #16 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #17 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #18 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #19 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #20 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #21 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #22 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #23 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #24 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #25 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #26 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #27 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #29 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #30 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #31 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #32 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #33 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #34 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M126799151248810032 is already destroyed.

  Thread T22 (tid=15618, running) created by thread T8 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T11 (tid=15607, running) created by thread T8 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a949) in std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b280000a058 by thread T21:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a96d)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26fa8)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(jax::WeakrefLRUCache::WeakrefCacheKey const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x238c7)
    #3 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::find(jax::WeakrefLRUCache::WeakrefCacheKey const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1fdb3)
    #4 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d046)
    #5 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #7 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #9 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #10 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #11 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #12 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #13 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #14 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #15 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #16 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #17 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #19 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #20 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b280000a058 by thread T17:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e50e)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2acdc)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #3 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #4 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #5 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #7 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #8 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #10 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #11 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #12 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #13 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #14 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #15 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #16 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #17 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #19 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #20 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #21 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #22 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #23 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #24 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #25 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #26 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #27 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #28 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #29 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #30 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #31 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #32 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 152 at 0x7b280000a000 allocated by thread T4:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #20 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #25 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T21 (tid=15617, running) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T17 (tid=15613, running) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T4 (tid=15600, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a96d) in std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 4 at 0x7b280000ffd4 by thread T23:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3578d)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 4 at 0x7b280000ffd4 by thread T20 (mutexes: write M139747000177459248):
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x208f8)
    #1 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #2 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #3 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #4 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #5 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #6 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #7 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #8 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #9 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #11 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #12 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #13 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #14 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #15 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #16 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #18 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #19 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #20 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #21 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #22 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #23 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 152 at 0x7b280000ffa0 allocated by thread T5:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #20 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #25 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M139747000177459248 is already destroyed.

  Thread T23 (tid=15619, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T20 (tid=15616, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T5 (tid=15601, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3578d) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b100001e000 by thread T20:
    #0 operator delete(void*, unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 (libtsan.so.0+0x8e878)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >::deallocate(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31da5)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >&, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30017)
    #3 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2daf9)
    #4 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29fe7)
    #5 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ada8)
    #6 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #7 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #8 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #9 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #10 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #12 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #14 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #15 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #16 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #17 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #18 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #19 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #20 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #21 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #22 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #24 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #25 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #26 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #27 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #28 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #29 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #30 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #31 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #32 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #33 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #34 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #35 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #36 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous read of size 8 at 0x7b100001e000 by thread T13 (mutexes: write M139747000177459248):
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a96d)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_node(unsigned long, jax::WeakrefLRUCache::WeakrefCacheKey const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26fa8)
    #2 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(std::integral_constant<bool, true>, jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26aad)
    #3 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2335e)
    #4 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f975)
    #5 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d38b)
    #6 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1debd)
    #7 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #8 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #9 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #10 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #11 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #12 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #13 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #14 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #16 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #17 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #18 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #19 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #20 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #21 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #22 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #23 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #24 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #25 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #26 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #27 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #28 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M139747000177459248 is already destroyed.

  Thread T20 (tid=15616, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T13 (tid=15609, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 in operator delete(void*, unsigned long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b100001c000 by thread T13:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ac85)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #3 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #4 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #5 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #7 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #9 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #10 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #11 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #12 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #13 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #14 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #15 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #16 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #17 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #19 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #20 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b100001c000 by thread T23:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ad70)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #3 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #4 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #5 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #7 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #9 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #10 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #11 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #12 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #13 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #14 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #15 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #16 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #17 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #19 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #20 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 64 at 0x7b100001c000 allocated by thread T13:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31e46)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x300fa)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_allocate_node<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2dc73)
    #4 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >*, jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2a192)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(std::integral_constant<bool, true>, jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x26a28)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2335e)
    #7 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::emplace<jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue>(jax::WeakrefLRUCache::WeakrefCacheKey&, jax::WeakrefLRUCache::WeakrefCacheValue&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f975)
    #8 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d38b)
    #9 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1debd)
    #10 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #12 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #13 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #14 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #15 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #16 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #17 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #20 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T13 (tid=15609, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T23 (tid=15619, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ac85) in std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b1800020360 by thread T10:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35706)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b1800020360 by thread T14 (mutexes: write M166487122964992048):
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20a20)
    #1 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #2 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #3 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #4 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #5 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #6 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #7 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #8 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #9 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #11 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #12 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #13 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #14 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #15 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #16 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #18 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #19 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #20 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #21 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #22 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #23 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 96 at 0x7b1800020340 allocated by thread T10:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M166487122964992048 is already destroyed.

  Thread T10 (tid=15606, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T14 (tid=15610, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35706) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b100000c038 by thread T14:
    #0 operator delete(void*, unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 (libtsan.so.0+0x8e878)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >::deallocate(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31da5)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >&, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30017)
    #3 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2daf9)
    #4 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29fe7)
    #5 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ada8)
    #6 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #7 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #8 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #9 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #10 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #12 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #14 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #15 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #16 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #17 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #18 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #19 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #20 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #21 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #22 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #24 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #25 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #26 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #27 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #28 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #29 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #30 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #31 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #32 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #33 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #34 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #35 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #36 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous read of size 8 at 0x7b100000c038 by thread T10:
    #0 std::__detail::_Hash_code_base<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> const&, unsigned long) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e3e9)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_bucket_index(std::__detail::_Hash_node_value<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> const&) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ab67)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2acb0)
    #3 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #4 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #5 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #6 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #7 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #8 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #9 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #10 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #11 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #12 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #13 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #14 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #15 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #16 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #17 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #18 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #19 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #20 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #21 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #22 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #23 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #24 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #25 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #26 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #27 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #28 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #29 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #30 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #31 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #32 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #33 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T14 (tid=15610, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T10 (tid=15606, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 in operator delete(void*, unsigned long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b100000e038 by thread T21:
    #0 operator delete(void*, unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 (libtsan.so.0+0x8e878)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >::deallocate(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x31da5)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> >&, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30017)
    #3 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2daf9)
    #4 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29fe7)
    #5 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2ada8)
    #6 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #7 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #8 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #9 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #10 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #12 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #14 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #15 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #16 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #17 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #18 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #19 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #20 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #21 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #22 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #24 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #25 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #26 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #27 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #28 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #29 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #30 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #31 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #32 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #33 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #34 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #35 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #36 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous read of size 8 at 0x7b100000e038 by thread T17:
    [failed to restore the stack]

  Thread T21 (tid=15617, running) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T17 (tid=15613, finished) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 in operator delete(void*, unsigned long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b18000262a0 by thread T21:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35706)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b18000262a0 by thread T17:
    [failed to restore the stack]

  Location is heap block of size 96 at 0x7b1800026280 allocated by thread T21:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T21 (tid=15617, running) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T17 (tid=15613, finished) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35706) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b18000262a8 by thread T21:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3571d)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b18000262a8 by thread T17:
    [failed to restore the stack]

  Location is heap block of size 96 at 0x7b1800026280 allocated by thread T21:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T21 (tid=15617, running) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T17 (tid=15613, finished) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3571d) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b1800026308 by thread T21:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b1800026308 by thread T17:
    [failed to restore the stack]

  Location is heap block of size 96 at 0x7b18000262e0 allocated by thread T21:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T21 (tid=15617, running) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T17 (tid=15613, finished) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b1800026240 by thread T21:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3576b)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b1800026240 by thread T17:
    [failed to restore the stack]

  Location is heap block of size 96 at 0x7b1800026220 allocated by thread T21:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T21 (tid=15617, running) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T17 (tid=15613, finished) created by thread T4 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3576b) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b180003c1a8 by thread T13:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3571d)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b180003c1a8 by thread T23:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 96 at 0x7b180003c180 allocated by thread T13:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T13 (tid=15609, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T23 (tid=15619, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3571d) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b2800015000 by thread T14:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2adb8)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #3 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #4 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #5 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #7 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #9 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #10 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #11 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #12 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #13 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #14 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #15 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #16 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #17 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #19 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #20 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b2800015000 by thread T10:
    [failed to restore the stack]

  Location is heap block of size 152 at 0x7b2800014fa0 allocated by thread T7:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #20 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #25 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T14 (tid=15610, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T10 (tid=15606, running) created by thread T7 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T7 (tid=15603, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2adb8) in std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b1800039208 by thread T23:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b1800039208 by thread T20 (mutexes: write M139747000177459248):
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 96 at 0x7b18000391e0 allocated by thread T20:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Mutex M139747000177459248 is already destroyed.

  Thread T23 (tid=15619, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T20 (tid=15616, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b2800010000 by thread T20:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2adb8)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #3 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #4 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #5 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #7 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #9 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #10 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #11 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #12 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #13 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #14 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #15 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #16 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #17 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #19 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #20 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b2800010000 by thread T23:
    #0 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2add4)
    #1 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x27188)
    #2 std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23b15)
    #3 std::unordered_map<jax::WeakrefLRUCache::WeakrefCacheKey, jax::WeakrefLRUCache::WeakrefCacheValue, jax::WeakrefLRUCache::WeakrefKeyHash, jax::WeakrefLRUCache::WeakrefKeyEq, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> > >::erase(std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, false, true>) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x20033)
    #4 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0cd)
    #5 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #6 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #7 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #9 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #10 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #11 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #12 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #13 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #14 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #15 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #16 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #17 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #18 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #19 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #20 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #21 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #22 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #23 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #24 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #25 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #26 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #27 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #28 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #29 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #30 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #31 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 152 at 0x7b280000ffa0 allocated by thread T5:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x33aa2)
    #2 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32bb5)
    #3 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, (__gnu_cxx::_Lock_policy)2> >&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3180d)
    #4 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(jax::WeakrefLRUCache*&, std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2fc35)
    #5 std::__shared_ptr<jax::WeakrefLRUCache, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2d5d7)
    #6 std::shared_ptr<jax::WeakrefLRUCache>::shared_ptr<std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::_Sp_alloc_shared_tag<std::allocator<jax::WeakrefLRUCache> >, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29d34)
    #7 std::shared_ptr<jax::WeakrefLRUCache> std::allocate_shared<jax::WeakrefLRUCache, std::allocator<jax::WeakrefLRUCache>, nanobind::callable&, nanobind::callable&, long&>(std::allocator<jax::WeakrefLRUCache> const&, nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x263c9)
    #8 std::shared_ptr<jax::WeakrefLRUCache> std::make_shared<jax::WeakrefLRUCache, nanobind::callable&, nanobind::callable&, long&>(nanobind::callable&, nanobind::callable&, long&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22c1a)
    #9 operator() /tmp/jax/xla_playground/check_WRLRUCache/weakref_lru_cache.cc:337 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x15391)
    #10 operator() /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:269 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19617)
    #11 _FUN /usr/local/lib/python3.13t/site-packages/nanobind/include/nanobind/nb_func.h:216 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x19752)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1371b1)
    #14 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1371b1)
    #15 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #16 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #17 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #18 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #19 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #20 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #21 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #22 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #23 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #24 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #25 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T20 (tid=15616, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T23 (tid=15619, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T5 (tid=15601, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #16 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #25 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #26 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #27 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #28 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #29 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #30 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #31 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #32 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #33 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #34 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #35 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #36 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #37 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #38 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #39 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #40 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #41 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #42 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #43 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #44 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #45 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #46 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #47 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #48 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #49 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #50 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #51 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #52 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #53 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #54 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #55 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c7ae)
    #56 method_vectorcall Objects/classobject.c:92 (python3.13t+0x13c7ae)
    #57 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #58 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #59 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #60 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1355 (python3.13t+0x852bd)
    #61 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #62 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #63 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #64 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #65 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #66 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #67 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #68 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #69 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #70 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #71 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #72 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #73 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #74 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #75 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #76 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #77 slot_tp_init Objects/typeobject.c:9780 (python3.13t+0x254953)
    #78 type_call Objects/typeobject.c:1990 (python3.13t+0x23cb92)
    #79 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #80 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #81 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #82 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #83 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #84 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x352e44)
    #85 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x352e44)
    #86 PyEval_EvalCode Python/ceval.c:596 (python3.13t+0x352e44)
    #87 run_eval_code_obj Python/pythonrun.c:1323 (python3.13t+0x40adee)
    #88 run_eval_code_obj Python/pythonrun.c:1290 (python3.13t+0x40adee)
    #89 run_mod Python/pythonrun.c:1408 (python3.13t+0x40b1d6)
    #90 pyrun_file Python/pythonrun.c:1241 (python3.13t+0x40e9f6)
    #91 _PyRun_SimpleFileObject Python/pythonrun.c:490 (python3.13t+0x40e9f6)
    #92 _PyRun_AnyFileObject Python/pythonrun.c:77 (python3.13t+0x40f58c)
    #93 pymain_run_file_obj Modules/main.c:409 (python3.13t+0x452685)
    #94 pymain_run_file Modules/main.c:428 (python3.13t+0x452685)
    #95 pymain_run_python Modules/main.c:696 (python3.13t+0x452685)
    #96 Py_RunMain Modules/main.c:775 (python3.13t+0x453735)
    #97 pymain_main Modules/main.c:805 (python3.13t+0x453735)
    #98 Py_BytesMain Modules/main.c:829 (python3.13t+0x453735)
    #99 main Programs/python.c:15 (python3.13t+0x82ba5)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2adb8) in std::_Hashtable<jax::WeakrefLRUCache::WeakrefCacheKey, std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, std::allocator<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue> >, std::__detail::_Select1st, jax::WeakrefLRUCache::WeakrefKeyEq, jax::WeakrefLRUCache::WeakrefKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::WeakrefCacheKey const, jax::WeakrefLRUCache::WeakrefCacheValue>, true>*)
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Read of size 8 at 0x7b18000392c0 by thread T20:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35706)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b18000392c0 by thread T13:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3576b)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 96 at 0x7b18000392a0 allocated by thread T20:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T20 (tid=15616, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T13 (tid=15609, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35706) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b1800039328 by thread T20:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b1800039328 by thread T13:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 96 at 0x7b1800039300 allocated by thread T20:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T20 (tid=15616, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T13 (tid=15609, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35731) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
==================
WARNING: ThreadSanitizer: data race (pid=15595)
  Write of size 8 at 0x7b18000391a0 by thread T13:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3576b)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Previous write of size 8 at 0x7b18000391a0 by thread T23:
    #0 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3576b)
    #1 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::~LRUCache() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35667)
    #2 void __gnu_cxx::new_allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35637)
    #3 void std::allocator_traits<std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > > >::destroy<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >(std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >&, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35521)
    #4 std::_Sp_counted_ptr_inplace<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, std::allocator<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x35296)
    #5 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x22e4f)
    #6 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1f4f6)
    #7 std::__shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cc95)
    #8 std::shared_ptr<xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> > >::~shared_ptr() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1ccf5)
    #9 jax::WeakrefLRUCache::WeakrefCacheValue::~WeakrefCacheValue() <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1cd69)
    #10 jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}::operator()(nanobind::handle) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1d0d9)
    #11 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23dd3)
    #12 nanobind::detail::func_create<true, true, jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}, void, nanobind::handle, 0ul>(jax::WeakrefLRUCache::GetCache(jax::WeakrefLRUCache::WeakrefCacheKey)::{lambda(nanobind::handle)#2}&&, void (*)(nanobind::handle), std::integer_sequence<unsigned long, 0ul>)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#2}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x23ef9)
    #13 nb_func_vectorcall_simple /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:892 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41f43)
    #14 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x1373c7)
    #15 PyObject_CallOneArg Objects/call.c:395 (python3.13t+0x1373c7)
    #16 handle_callback Objects/weakrefobject.c:970 (python3.13t+0x2dbffd)
    #17 PyObject_ClearWeakRefs Objects/weakrefobject.c:1057 (python3.13t+0x2dbffd)
    #18 subtype_dealloc Objects/typeobject.c:2319 (python3.13t+0x24742f)
    #19 _Py_Dealloc Objects/object.c:2878 (python3.13t+0x1e80e7)
    #20 _Py_MergeZeroLocalRefcount Objects/object.c:400 (python3.13t+0x1e80e7)
    #21 Py_DECREF Include/object.h:907 (python3.13t+0x3a205e)
    #22 Py_XDECREF Include/object.h:1036 (python3.13t+0x3a205e)
    #23 _PyFrame_ClearLocals Python/frame.c:104 (python3.13t+0x3a205e)
    #24 _PyFrame_ClearExceptCode Python/frame.c:129 (python3.13t+0x3a21bb)
    #25 clear_thread_frame Python/ceval.c:1668 (python3.13t+0x34e3d2)
    #26 _PyEval_FrameClearAndPop Python/ceval.c:1695 (python3.13t+0x34e3d2)
    #27 _PyEval_EvalFrameDefault Python/generated_cases.c.h:5204 (python3.13t+0x8f5c2)
    #28 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #29 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #30 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #31 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #32 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #33 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #34 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #35 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #36 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #37 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Location is heap block of size 96 at 0x7b1800039180 allocated by thread T20:
    #0 operator new(unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:64 (libtsan.so.0+0x8f162)
    #1 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >::allocate(unsigned long, void const*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x32643)
    #2 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> >&, unsigned long) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x30e05)
    #3 std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2e9ad)
    #4 std::_Hashtable<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, true> > >*, std::piecewise_construct_t const&, std::tuple<jax::WeakrefLRUCache::Key const&>&&, std::tuple<>&&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x2b3c0)
    #5 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::__detail::_Insert_base<jax::WeakrefLRUCache::Key, std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> >, std::__detail::_Select1st, std::equal_to<jax::WeakrefLRUCache::Key>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::try_emplace<jax::WeakrefLRUCache::Key const&>(std::__detail::_Node_const_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x277b7)
    #6 std::pair<std::__detail::_Node_iterator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry>, false, true>, bool> std::unordered_map<jax::WeakrefLRUCache::Key, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key>, std::allocator<std::pair<jax::WeakrefLRUCache::Key const, xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Entry> > >::try_emplace<>(jax::WeakrefLRUCache::Key const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x24465)
    #7 xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::GetOrCreateIfAbsent(jax::WeakrefLRUCache::Key const&, std::function<std::shared_ptr<jax::WeakrefLRUCache::CacheEntry> (jax::WeakrefLRUCache::Key const&)> const&) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x207f1)
    #8 jax::WeakrefLRUCache::Call(nanobind::object, nanobind::args, nanobind::kwargs) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x1e03e)
    #9 nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}::operator()(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x25f2a)
    #10 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::operator()(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) const <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x29034)
    #11 nanobind::detail::func_create<false, true, nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}, nanobind::object, jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs, 0ul, 1ul, 2ul, 3ul, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::cpp_function_def<jax::WeakrefLRUCache, nanobind::object, jax::WeakrefLRUCache, nanobind::object, nanobind::args, nanobind::kwargs, nanobind::scope, nanobind::name, nanobind::is_method>(nanobind::object (jax::WeakrefLRUCache::*)(nanobind::object, nanobind::args, nanobind::kwargs), nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs)#1}&&, nanobind::object (*)(jax::WeakrefLRUCache*, nanobind::object, nanobind::args, nanobind::kwargs), std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, nanobind::scope const&, nanobind::name const&, nanobind::is_method const&)::{lambda(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*)#1}::_FUN(void*, _object**, unsigned char*, nanobind::rv_policy, nanobind::detail::cleanup_list*) <null> (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x293ed)
    #12 nb_func_vectorcall_complex /usr/local/lib/python3.13t/site-packages/nanobind/src/nb_func.cpp:800 (wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x41953)
    #13 _PyObject_VectorcallDictTstate Objects/call.c:135 (python3.13t+0x1396aa)
    #14 _PyObject_Call_Prepend Objects/call.c:504 (python3.13t+0x1399d6)
    #15 slot_tp_call Objects/typeobject.c:9534 (python3.13t+0x254763)
    #16 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #17 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #18 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #19 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #20 _PyEval_EvalFrameDefault Python/generated_cases.c.h:813 (python3.13t+0x866e4)
    #21 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #22 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #23 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #24 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #25 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #26 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #27 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #28 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #29 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #30 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T13 (tid=15609, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T23 (tid=15619, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

  Thread T20 (tid=15616, running) created by thread T5 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 do_start_joinable_thread Python/thread_pthread.h:290 (python3.13t+0x433030)
    #2 PyThread_start_joinable_thread Python/thread_pthread.h:314 (python3.13t+0x433030)
    #3 ThreadHandle_start Modules/_threadmodule.c:422 (python3.13t+0x501525)
    #4 do_start_new_thread Modules/_threadmodule.c:1882 (python3.13t+0x501525)
    #5 thread_PyThread_start_joinable_thread Modules/_threadmodule.c:2005 (python3.13t+0x501ef9)
    #6 cfunction_call Objects/methodobject.c:540 (python3.13t+0x1e0130)
    #7 _PyObject_MakeTpCall Objects/call.c:242 (python3.13t+0x13636b)
    #8 _PyObject_VectorcallTstate Include/internal/pycore_call.h:166 (python3.13t+0x1372c8)
    #9 _PyObject_VectorcallTstate Include/internal/pycore_call.h:153 (python3.13t+0x1372c8)
    #10 PyObject_Vectorcall Objects/call.c:327 (python3.13t+0x1372c8)
    #11 _PyEval_EvalFrameDefault Python/generated_cases.c.h:1502 (python3.13t+0x8a87b)
    #12 _PyEval_EvalFrame Include/internal/pycore_ceval.h:119 (python3.13t+0x353276)
    #13 _PyEval_Vector Python/ceval.c:1806 (python3.13t+0x353276)
    #14 _PyFunction_Vectorcall Objects/call.c:413 (python3.13t+0x1375ab)
    #15 _PyObject_VectorcallTstate Include/internal/pycore_call.h:168 (python3.13t+0x13c926)
    #16 method_vectorcall Objects/classobject.c:70 (python3.13t+0x13c926)
    #17 _PyVectorcall_Call Objects/call.c:273 (python3.13t+0x139a6d)
    #18 _PyObject_Call Objects/call.c:348 (python3.13t+0x13a1f0)
    #19 PyObject_Call Objects/call.c:373 (python3.13t+0x13a1f0)
    #20 thread_run Modules/_threadmodule.c:337 (python3.13t+0x500327)
    #21 pythread_wrapper Python/thread_pthread.h:243 (python3.13t+0x432d7a)

SUMMARY: ThreadSanitizer: data race (/tmp/jax/xla_playground/check_WRLRUCache/build/wrlru_cache_ext.cpython-313t-x86_64-linux-gnu.so+0x3576b) in xla::LRUCache<jax::WeakrefLRUCache::Key, std::shared_ptr<jax::WeakrefLRUCache::CacheEntry>, absl::hash_internal::Hash<jax::WeakrefLRUCache::Key>, std::equal_to<jax::WeakrefLRUCache::Key> >::Clear()
==================
ok

----------------------------------------------------------------------
Ran 2 tests in 0.294s

OK
ThreadSanitizer: reported 25 warnings
